@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model Bloggie.Webb.Models.ViewModels.BlogDetailsViewModel
@{
    ViewData["Title"] = Model.PageTitle;
}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                 
                 </div>
                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                    <a id ='btnLike' style = "cursor:pointer" >
                    <i class="bi bi-hand-thumbs-up"></i>
                    </a>
                     }
                    <span>@Model.TotalLikes</span> Likes
                </div>
               
               

                <div class="d-flex mb-3">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-dark me-1">@tag.Name</span>
                    }
                     </div>
                    <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />
                                    
                    <div class="mb-3">
                      @Html.Raw(Model.Content)  
                       </div>
                        <div class="card">
                            <div class="card-header">
                                <h5>Comments</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                          <form method="Post">
                              <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription"/> 
                              </div>
                              <div class="mb-3">
                                  <button type="submit" class="btn btn-dark">Submit</button>
                                  <input type="hidden" asp-for="Id" />
                                  <input type="hidden" asp-for="UrlHandle" />
                              </div>
                          </form>
                        }
                          </div>
                      
                          <div class="card-body"></div>
                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        <div>
                            @foreach(var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                    <div>
                                    @comment.Description
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary">@comment.Username</span>
                                            <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>

                                    </div>



                                    </div>

                                </div>


                            }
                        </div>



                    }
                </div>
                 
            }
            else
            {
               <p>Blog Post not found!</p>
            }

        </div>

    </div>
</div>

@section scripts
{
<script>
    const btnLikeElement = document.getElementById('btnLike');
  
    async function addLikeForBlog() 
    {
            fetch("api/BlogPostLike/Add",
            {
            method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
            },
            body: JSON.stringify({
                BlogPostId: '@Model.Id',
                UserId: '@userManager.GetUserId(User)'
            }),
        }).then(console.log('Request Finished'));
    }

        btnLikeElement.addEventListener('click', addLikeForBlog);
 

</script> 
}